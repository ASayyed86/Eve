# Eve Code as records

Create a transform that looks for `#foo` records and adds a div with their `value` attribute as its text

```
commit @compiler
  var1 = [#compiler/variable]
  var2 = [#compiler/variable]
  [#compiler/transform
    name: "cool stuff"
    description: "this is a test transform for us to use"
    scans: [#compiler/record attributes: [value:var2, tag:"foo"] scopes: "session"]
    binds: [#compiler/record attributes: [tag:"div", text:var2] scopes: "browser"]]
```

```
search @compiler
  transform = [#compiler/transform scans: scan]
  scan = [#compiler/record attributes scopes]
  lookup[record: attributes, attribute: a, value: v]
bind @compiler
  var = [#compiler/variable scan]
  transform.scans += [#compiler/scan scan e:var, a, v, scopes]
```

```
search @compiler
  transform = [#compiler/transform binds: binding]
  binding = [#compiler/record attributes scopes]
  lookup[record: attributes, attribute: a, value: v]
  index = sort[value: a per: binding]
bind @compiler
  var = [#compiler/variable binding]
  transform.expressions += [#compiler/expression binding operation:"generateId" | args: [index, v] results: [index:1, v: var]]
  transform.binds += [#compiler/insert binding e:var, a, v, scopes]
```

Draw a transform

```
search @compiler
  transform = [#compiler/transform name description]
bind @browser
  [#div class:"transform" transform children:
    [#div class:"name" text: name]
    [#div class:"description" text: description]
    [#div #transform-code transform]
    [#div text: "into"]
    [#div #transform-result transform]]
```

```
search @compiler @browser
  parent = [#transform-code transform: [scans]]
  scans = [#compiler/record attributes]
  lookup[record: attributes, attribute, value]
  attribute != "tag"
  display-value = if value = [#compiler/variable] then attribute
                  else "{{attribute}}: {{value}}"
bind @browser
  parent.children +=
    [#div class:"record" scans children:
      [#div children:
        [#span text: "#{{attributes.tag}}"]]
      [#div children:
        [#div text: display-value]]]
```

```
search @compiler @browser
  parent = [#transform-result transform: [binds]]
  binds = [#compiler/record attributes]
  lookup[record: attributes, attribute, value]
  attribute != "tag"
  display-value = if value = [#compiler/variable] then attribute
                  else "{{attribute}}: {{value}}"
bind @browser
  parent.children +=
    [#div class:"record" binds children:
      [#div children:
        [#span text: "#{{attributes.tag}}"]]
      [#div children:
        [#div text: display-value]]]
```

```css
.transform { background:#222; color:#ccc; padding:20px; }
.transform .name { font-size:14pt; margin-bottom:10px; }
.transform .description { color: #aaf; margin-bottom:20px; }
.record { border: 1px solid #999; padding:10px; margin-top:10px; margin-bottom: 10px; }
```

Add some test data

```
bind
  [#foo value: "hey what's up?"]
```
